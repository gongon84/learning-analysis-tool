name: CI

on:
  push:

permissions:
  contents: read

jobs:
  # golangci-lint
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  # codeclimate test report
  cc-test:
    name: Test-report
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20

    - name: Check out code
      uses: actions/checkout@v3

    - name: Get dependencies
      run: go mod download

    - name: Install coverage tools
      run: |
        go install github.com/axw/gocov/gocov@latest
        go install github.com/AlekSi/gocov-xml@latest
    
    - name: Add GOPATH/bin to PATH
      run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Test with coverage
      run: go test -v -covermode=count -coverprofile=coverage.out ./go/domains/...

    - name: Convert to Cobertura format
      run: |
        gocov convert coverage.out | gocov-xml > coverage.xml

    - name: Send coverage to CodeClimate
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
        ./cc-test-reporter after-build --exit-code $?

  lighthouse-ci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          
      - name: Install dependencies
        run: npm install
        
      - name: Start server
        run: go run ./go/main.go & sleep 10
      
      - name: Install ngrok and start tunnel
        run: |
          npm install -g ngrok
          ngrok http 8080 > /dev/null & sleep 10

      - name: Fetch public URL
        id: fetch_url
        run: echo "::set-output name=url::$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')"

      - name: Install Lighthouse CLI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: lhci autorun --collect.url=${{ steps.fetch_url.outputs.url }}

  comment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Comment on PR
      run: |
        PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/pulls?state=open | jq '.[] | select(.head.sha=="${{ github.sha }}") | .number')
        if [[ ! -z "$PR_NUMBER" ]]; then
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST -d '{"body":"テスト"}' \
               https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
